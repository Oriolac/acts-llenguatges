
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftSUMARESTAleftMULTDIVMODDIV INTEGER MOD MULT RESTA SUMA\n        sentence : expr ';'\n        \n        sentence : empty ';'\n        \n        expr : '(' expr ')'\n              | expr SUMA expr\n              | expr RESTA expr\n              | expr MULT expr\n              | expr DIV expr\n              | expr MOD expr\n              | INTEGER\n        empty :"
    
_lr_action_items = {'(':([0,4,7,8,9,10,11,],[4,4,4,4,4,4,4,]),'INTEGER':([0,4,7,8,9,10,11,],[5,5,5,5,5,5,5,]),';':([0,2,3,5,14,15,16,17,18,19,],[-10,6,12,-9,-4,-5,-6,-7,-8,-3,]),'$end':([1,6,12,],[0,-1,-2,]),'SUMA':([2,5,13,14,15,16,17,18,19,],[7,-9,7,-4,-5,-6,-7,-8,-3,]),'RESTA':([2,5,13,14,15,16,17,18,19,],[8,-9,8,-4,-5,-6,-7,-8,-3,]),'MULT':([2,5,13,14,15,16,17,18,19,],[9,-9,9,9,9,-6,-7,-8,-3,]),'DIV':([2,5,13,14,15,16,17,18,19,],[10,-9,10,10,10,-6,-7,-8,-3,]),'MOD':([2,5,13,14,15,16,17,18,19,],[11,-9,11,11,11,-6,-7,-8,-3,]),')':([5,13,14,15,16,17,18,19,],[-9,19,-4,-5,-6,-7,-8,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentence':([0,],[1,]),'expr':([0,4,7,8,9,10,11,],[2,13,14,15,16,17,18,]),'empty':([0,],[3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentence","S'",1,None,None,None),
  ('sentence -> expr ;','sentence',2,'p_sentencia','p2.py',32),
  ('sentence -> empty ;','sentence',2,'p_sentencia_buida','p2.py',40),
  ('expr -> ( expr )','expr',3,'p_expr','p2.py',46),
  ('expr -> expr SUMA expr','expr',3,'p_expr','p2.py',47),
  ('expr -> expr RESTA expr','expr',3,'p_expr','p2.py',48),
  ('expr -> expr MULT expr','expr',3,'p_expr','p2.py',49),
  ('expr -> expr DIV expr','expr',3,'p_expr','p2.py',50),
  ('expr -> expr MOD expr','expr',3,'p_expr','p2.py',51),
  ('expr -> INTEGER','expr',1,'p_expr','p2.py',52),
  ('empty -> <empty>','empty',0,'p_empty','p2.py',63),
]
